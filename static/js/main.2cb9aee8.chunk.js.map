{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","name","cursor","picture","day","Tasks","tasks","map","index","AddTask","useState","setname","setDay","setReminder","setpicture","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","taskFromServer","console","log","fetch","method","res","json","data","fetchTask","addTask","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskTotoggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cb9aee8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color,text, onClick }) => {\r\n    return(<button onClick={onClick} style={{ backgroundColor: color }} \r\n    className='btn'>\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title,onAdd,showAdd }) =>{\r\n    return(\r\n        <header className= 'header'> \r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'}\r\n            onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps ={\r\n    title: 'Register page',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle ={\r\n//     color: 'red',\r\n//     backgroundColor:'black',\r\n// }\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\n//Task \r\nconst Task = ({ task, onDelete , onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder':''}`} \r\n            onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.name} <FaTimes style={ {color: \r\n                'red', cursor: 'pointer'}} \r\n                onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.picture}</p>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n        {tasks.map((task, index) => ( \r\n         <Task key={index} \r\n         task={task} \r\n         onDelete={onDelete}\r\n         onToggle={onToggle} \r\n          />\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const[name, setname] = useState('')\r\n    const[day, setDay] = useState('')\r\n    const[reminder, setReminder] = useState(false)\r\n    const[picture, setpicture] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!name){\r\n            alert('Please add a info')\r\n            return\r\n        }\r\n\r\n        onAdd({ name, day, reminder , picture})\r\n\r\n        setname('')\r\n        setDay('')\r\n        setpicture('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='name' placeholder='Add name'\r\n                value={name} onChange={(e) => setname(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time'\r\n                value={day} onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>picture</label>\r\n                <input type='text' placeholder='onlyfortesting'\r\n                value={picture} onChange={(e) => setpicture(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control\r\n            form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                type='checkbox' \r\n                checked ={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            \r\n\r\n            <input type='submit' value='Save Task'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState,useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() =>{\n    const getTasks = async () =>{\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    console.log('fetchallmember');\n    const res = await fetch('http://localhost:5000/api/members',\n    {\n      method: 'GET'\n    })\n    const data = await res.json()\n    //if err throw error\n    return data\n  }\n\n  // Fetch a Task\n  const fetchTask = async (id) => {\n    console.log('fetchamember');\n    const res = await fetch(`http://localhost:5000/api/members/find/${id}`,\n    {\n      method: 'GET'\n    })\n    console.log('fetchamember2');\n    const data = await res.json()\n    return data\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/api/members',\n    {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data =  await res.json()\n\n    setTasks([...tasks, data])\n\n    //const id = Math.floor(Math.random() * 1000) + 1\n    //const newTask = { id, ...task }\n    //setTasks([...tasks, newTask])\n  }\n\n //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/api/members/single/${id}`\n    ,{\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n// Toggle Reminder\n const toggleReminder = async(id) => {\n   const taskTotoggle = await fetchTask(id)\n   const updTask = { ...taskTotoggle,reminder: !taskTotoggle.reminder }\n   \n   const res = await fetch(`http://localhost:5000/api/members/${id}`\n   ,{\n     method: 'PUT',\n     headers:{\n       'Content-type': 'application/json'\n     },\n     body: JSON.stringify(updTask),\n   })\n   const data = await res.json()\n\n   setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !data.reminder} : task))\n }\n\n\n  return (\n    <div className = 'container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} \n      onDelete={deleteTask} \n      onToggle={toggleReminder}/>) : ('No Tasks To Show')}\n      \n    </div>\n  )\n}\n\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}